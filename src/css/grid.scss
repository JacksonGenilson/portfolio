$col-sm: 576;
$col-md: 768;
$col-lg: 992;
$col-xl: 1200;
$col-xxl: 1600;

$num_cols: 12;
$gutter: 12;

$map-cols-props: (
	'-xs': 0,
	'-sm': $col-sm,
	'-md': $col-md,
	'-lg': $col-lg,
	'-xl': $col-xl,
	'-xxl': $col-xxl
);

// @use 'screen_sizes' as *;

@mixin create-mq($breakpoint, $min-or-max) {
	@if($breakpoint == 0) {
		@content;
	} @else {
		@media screen and (#{$min-or-max}-width: ($breakpoint * 1px)) {
			@content;
		}
	}
}

@mixin create-col-classes($modifier, $grid-cols, $breakpoint) {
	@include create-mq($breakpoint, 'min') {
		&#{$modifier}-offset-0 {
			margin-left: 0;
		}
		@for $i from 1 through $grid-cols {
			&#{$modifier}-#{$i} {
				flex-basis: (100 / ($grid-cols / $i) ) * 1%;
			}
			&#{$modifier}-offset-#{$i} {
				margin-left: (100 / ($grid-cols / $i) ) * 1%;
			}
		}
	}
}
[class^='col']{
	padding: 0 $gutter * 1px;
}
.col{
	@for $i from 1 through $num_cols {
		&-#{$i} {
			flex-basis: (100 / ($num_cols / $i) ) * 1%;
		}
		&-offset-#{$i} {
			margin-left: (100 / ($num_cols / $i) ) * 1%;
		}
	}
	@each $modifier , $breakpoint in $map-cols-props {
		@include create-col-classes($modifier, $num_cols, $breakpoint);
	}
}

@each $modifier , $breakpoint in $map-cols-props {
	@include create-mq($breakpoint - 1, 'max') {
		.hidden#{$modifier}-down {
			display: none !important;
		}
	}
	@include create-mq($breakpoint, 'min') {
		.hidden#{$modifier}-up {
			display: none !important;
		}
	}
}

.container {
	width: 100%;
	margin: 0 auto;
	padding: 0 $gutter * 1px;
	&-fluid {
		padding: 0 $gutter * 1px;
		margin: 0;
		width: 100%;
	}
	@each $modifier , $breakpoint in $map-cols-props {
		@if($breakpoint != 0) {
			@include create-mq($breakpoint, 'min') {
				width: $breakpoint * 1px - 100px;
			}
		}
	}
}

.row {
	display: flex;
	flex-wrap: wrap;
	width: 100%;
}

[class^='justify']{
	display: flex;
}

.justify{
	display: flex;
	&-center{
		justify-content: center;
	}
	&-start{
		justify-content: flex-start;
	}
	&-end{
		justify-content: flex-end;
	}
	&-evenly{
		justify-content: space-evenly;
	}
	&-between{
		justify-content: space-between;
	}
	&-around{
		justify-content: space-around;
	}
}

.flex {
	display: flex;
}

.align{
	display: flex;
	&-center{
		align-items: center;
	}
	&-start{
		align-items: flex-start;
	}
	&-end{
		align-items: flex-end;
	}
}